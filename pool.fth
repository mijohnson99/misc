: TAKE  DUP @ DUP @ ROT ! ;
: GIVE  2DUP @ SWAP ! ! ;
\ Note: ^ These could be used as generic linked list operators
: POOL: ( cap size -- ) CELL MAX CREATE HERE 0 , ROT DUP ALLOT
        OVER CELL+ TUCK + SWAP DO I OVER GIVE OVER +LOOP 2DROP ;
: AVAILABLE  -1 BEGIN 1+ SWAP @ TUCK 0= UNTIL ;

\ e.g., a toy example of a cons cell pool below

: KB  10 LSHIFT ;
: MB  20 LSHIFT ;

1 KB CONSTANT CONS-SPACE
CONS-SPACE 2 CELLS POOL: CONS-CELLS

: CAR  @ ;
: CDR  CELL+ @ ;
: CONS  CONS-CELLS TAKE  TUCK CELL+ !  TUCK ! ;

: ATOM?  CONS-CELLS DUP CONS-SPACE + WITHIN INVERT ;

: DISPLAY  DUP ATOM? IF . EXIT THEN
           ." ( "
           BEGIN DUP CAR RECURSE CDR DUP ATOM? UNTIL
           ." . "
	   RECURSE
           ." )" ;

: LISP-FREE DUP ATOM? IF  DROP  EXIT THEN
            DUP CAR OVER CDR RECURSE RECURSE
	    CONS-CELLS GIVE ;

CONS-CELLS AVAILABLE . CR

3 2 1 0 CONS CONS CONS
DUP DISPLAY CR
LISP-FREE

CONS-CELLS AVAILABLE . CR

BYE
